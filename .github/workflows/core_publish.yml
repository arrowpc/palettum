name: Build and Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      publish_target:
        description: "Publish to PyPI or TestPyPI"
        required: true
        type: choice
        options:
          - "none"
          - "test"
          - "production"
        default: "none"
  push:
    branches:
      - "**"
    paths:
      - ".github/workflows/core_publish.yml"
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/core_publish.yml"

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
          - os: windows-2019
          - os: macos-13
            deployment-target: "13.0"
          - os: macos-15
            deployment-target: "15.0"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Move core into root
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mv apps/core/* .

      - name: Move core into root (Windows)
        if: runner.os == 'Windows'
        working-directory: .
        run: |
          move apps\core\* .

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install libomp ninja

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/external/vcpkg
          runVcpkgInstall: true

      - name: Use cibuildwheel
        uses: pypa/cibuildwheel@v2.23.0
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_ARCHS_MACOS: auto
          CIBW_ARCHS_LINUX: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: dockcross/manylinux_2_28-x64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_SKIP: "*musllinux*"
          CIBW_BEFORE_BUILD: |
            pip install "pybind11[global]"
          CIBW_ENVIRONMENT_MACOS: >
            OpenMP_ROOT=$(brew --prefix)/opt/libomp
            MACOSX_DEPLOYMENT_TARGET=${{ matrix.deployment-target }}

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: artifact-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_target != 'none'
    steps:
      - uses: actions/checkout@v4
      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: artifact-*
          merge-multiple: true

      - name: List wheel files
        run: ls dist/

      - name: Publish to TestPyPI
        if: github.event.inputs.publish_target == 'test'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_PASSWORD }}

      - name: Publish to PyPI
        if: github.event.inputs.publish_target == 'production'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Create GitHub Release
        if: github.event.inputs.publish_target == 'production'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
