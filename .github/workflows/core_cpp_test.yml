name: Core C++ Tests

on:
  workflow_dispatch:

  push:
    paths:
      - ".github/workflows/core_cpp_test.yml"
      - "apps/core/tests/test_images/**"
      - "apps/core/**/CMakeLists.txt"
      - "apps/core/CMakeLists.txt"
      - "apps/core/**/*.cmake"
      - "apps/core/vcpkg.json"
      - "apps/core/**.cpp"
      - "apps/core/**.h"
  pull_request:
    paths:
      - ".github/workflows/core_cpp_test.yml"
      - "apps/core/tests/test_images/**"
      - "apps/core/**/CMakeLists.txt"
      - "apps/core/CMakeLists.txt"
      - "apps/core/vcpkg.json"
      - "apps/core/**/*.cmake"
      - "apps/core/**.cpp"
      - "apps/core/**.h"

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-13, windows-2019]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: apps/core

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup MSVC (Windows)
        uses: ilammy/msvc-dev-cmd@v1

      - name: Build mtpng (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd external/mtpng
          make

      - name: Build mtpng (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          cd external\mtpng
          build-win.bat x64

      - name: Install macOS dependencies
        if: runner.os == 'macOS'
        run: |
          brew install libomp ninja

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ github.workspace }}/apps/core/external/vcpkg
          runVcpkgInstall: true

      - name: Configure CMake
        shell: bash
        run: |
          if [ "$RUNNER_OS" == "macOS" ]; then
            export OpenMP_ROOT=$(brew --prefix)/opt/libomp
          fi
          cmake --preset=default

      - name: Build project
        shell: bash
        run: |
          cmake --build --preset=default

      - name: Run tests
        run: |
          ctest --preset=default
