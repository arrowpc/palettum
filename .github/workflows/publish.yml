name: Build and Publish to PyPI and TestPyPI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build libpng arm64 from source
        run: |
          git clone https://git.code.sf.net/p/libpng/code libpng-code
          cd libpng-code
          ./configure --prefix=${GITHUB_WORKSPACE}/libpng-arm64 --host=aarch64-apple-darwin
          make
          make install

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

#      - name: Cache OpenCV x86_64
#        id: cache-opencv-x86_64-v2
#        uses: actions/cache@v3
#        with:
#          path: opencv_build/x86_64
#          key: opencv-x86_64-4.8.0
#
#      - name: Cache OpenCV arm64
#        id: cache-opencv-arm64-v2
#        uses: actions/cache@v3
#        with:
#          path: opencv_build/arm64
#          key: opencv-arm64-4.8.0

      - name: Build OpenCV from source
#        if: steps.cache-opencv-x86_64.outputs.cache-hit != 'true' || steps.cache-opencv-arm64.outputs.cache-hit != 'true'
        run: |
          git clone --branch 4.8.0 --depth 1 https://github.com/opencv/opencv.git
          mkdir -p opencv_build/x86_64 && cd opencv_build/x86_64
          cmake -D CMAKE_BUILD_TYPE=RELEASE \
                -D CMAKE_INSTALL_PREFIX=$(pwd) \
                -D CMAKE_OSX_ARCHITECTURES=x86_64 \
                -D BUILD_LIST=core,imgproc,imgcodecs,highgui \
                -D BUILD_EXAMPLES=OFF \
                -D BUILD_TESTS=OFF \
                -D BUILD_PERF_TESTS=OFF \
                -D WITH_IPP=OFF \
                ../../opencv
          make -j$(sysctl -n hw.logicalcpu)
          cd ../../

      - name: Use cibuildwheel
        uses: pypa/cibuildwheel@v2.16.1
        env:
          CIBW_BUILD: cp310-* cp311-*
          CIBW_ARCHS_MACOS: x86_64
          CIBW_ENVIRONMENT_MACOS: OpenCV_DIR=$(pwd)/opencv_build/x86_64

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: List wheel files
        run: ls dist/

      - name: Publish to TestPyPI
        if: github.event_name != 'push' || (github.event_name == 'push' && github.ref != 'refs/heads/master')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_PASSWORD }}

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
