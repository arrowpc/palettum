name: Build and Publish to PyPI

on:
  workflow_dispatch:

  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
    paths:
      - 'apps/core/**'
      - '.github/workflows/core_publish.yml'
  pull_request:
    branches:
      - '**'
    paths:
      - 'apps/core/**'
      - '.github/workflows/core_publish.yml'

env:
  OPENCV_VERSION: 4.8.0

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-13, windows-2019 ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Move core into root
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mv apps/core/* .

      - name: Move core into root (Windows)
        if: runner.os == 'Windows'
        working-directory: .
        run: |
          move apps\core\* .

      - name: Install OpenMP
        if: runner.os == 'macOS'
        run: |
          brew install libomp

      - name: Use cibuildwheel
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* **cp311-* cp312-*
          CIBW_ARCHS_MACOS: auto arm64
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_WINDOWS: AMD64
          CIBW_SKIP: "*musllinux*"
          CIBW_ENVIRONMENT_MACOS: >
            OpenMP_ROOT=$(brew --prefix)/opt/libomp
            MACOSX_DEPLOYMENT_TARGET=13.0

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: contains(github.event.head_commit.message, '[publish-test]') || startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - name: List wheel files
        run: ls dist/

      - name: Publish to TestPyPI
        if: contains(github.event.head_commit.message, '[publish-test]') && github.event_name == 'push' && !startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_PASSWORD }}

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false