name: Build and Release CLI

on:
  workflow_dispatch:
  push:
    paths:
      - "cli/**"
      - "core/**"
      - "wasm/**"
      - "Cargo.toml"
      - ".github/workflows/release-cli.yml"
    tags:
      - "v*"

jobs:
  build:
    name: Build - ${{ matrix.platform.os_name }} (${{ matrix.build_type.name }})
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-24.04
            target: x86_64-unknown-linux-musl

          - os_name: Linux-aarch64
            os: ubuntu-24.04
            target: aarch64-unknown-linux-musl

          - os_name: Linux-riscv64
            os: ubuntu-24.04
            target: riscv64gc-unknown-linux-gnu

          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc

          - os_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc

          - os_name: macOS-x86_64
            os: macos-13
            target: x86_64-apple-darwin

          - os_name: macOS-aarch64
            os: macos-15
            target: aarch64-apple-darwin

        build_type:
          - name: none
            features: "--no-default-features"
            suffix: ""
          - name: video
            features: "--no-default-features --features video"
            suffix: "-video"
          - name: gpu
            features: "--no-default-features --features gpu"
            suffix: "-gpu"
          - name: video-gpu
            features: "--no-default-features --features video,gpu"
            suffix: "-video-gpu"

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install FFmpeg (Ubuntu)
        if: runner.os == 'Linux' && contains(matrix.build_type.name, 'video')
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libavutil-dev libavcodec-dev libavformat-dev \
            libavdevice-dev libswscale-dev libswresample-dev \
            libpostproc-dev

      - name: Install FFmpeg (macOS)
        if: runner.os == 'macOS' && contains(matrix.build_type.name, 'video')
        run: |
          brew update
          brew install ffmpeg

      - name: Download & extract FFmpeg (Windows)
        if: runner.os == 'Windows' && contains(matrix.build_type.name, 'video')
        shell: powershell
        run: |
          $url     = 'https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full-shared.7z'
          $archive = Join-Path $Env:USERPROFILE 'ffmpeg.7z'
          $dest    = Join-Path $Env:USERPROFILE 'ffmpeg'

          Invoke-WebRequest $url -OutFile $archive
          $seven = Join-Path ($env:ProgramFiles + '\7-Zip\7z.exe')
          & $seven x $archive "-o$dest" -y
          Remove-Item $archive

          $nestedDir = Get-ChildItem -Path $dest | Select-Object -First 1
          Get-ChildItem -Path $nestedDir.FullName | Move-Item -Destination $dest
          Remove-Item -Path $nestedDir.FullName

          Add-Content -Path $Env:GITHUB_ENV -Value "FFMPEG_DIR=$dest"
          Add-Content -Path $Env:GITHUB_ENV -Value "INCLUDE=$dest\include;$Env:INCLUDE"
          Add-Content -Path $Env:GITHUB_ENV -Value "LIB=$dest\lib;$Env:LIB"
          Add-Content -Path $Env:GITHUB_ENV -Value "PATH=$dest\bin;$Env:PATH"

      - name: Build palettum-cli
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.platform.target }}
          args: "--release -p cli ${{ matrix.build_type.features }}"
          strip: true

      - name: Rename executable for release
        if: matrix.build_type.suffix != ''
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            mv target/${{ matrix.platform.target }}/release/palettum.exe target/${{ matrix.platform.target }}/release/palettum${{ matrix.build_type.suffix }}.exe
          else
            mv target/${{ matrix.platform.target }}/release/palettum target/${{ matrix.platform.target }}/release/palettum${{ matrix.build_type.suffix }}
          fi

      - name: Publish artifact as Draft Release
        if: "!startsWith(github.ref, 'refs/tags/v')"
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: palettum${{ matrix.build_type.suffix }}
          target: ${{ matrix.platform.target }}
          changes-file: ""

      - name: Publish GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: houseabsolute/actions-rust-release@v0
        with:
          executable-name: palettum${{ matrix.build_type.suffix }}
          target: ${{ matrix.platform.target }}
          changes-file: ""
