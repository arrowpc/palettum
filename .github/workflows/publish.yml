name: Publish to PyPI and TestPyPI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - '**'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        env:
          CIBW_BEFORE_BUILD: "yum install -y opencv*"
        run: python -m cibuildwheel --output-dir wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish:
    needs: build_wheels
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          path: dist/

      - name: Publish to TestPyPI
        if: github.event_name != 'push' || (github.event_name == 'push' && github.ref != 'refs/heads/master')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_PASSWORD }}

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PASSWORD }}

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false